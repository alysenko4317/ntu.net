// <auto-generated />
using System;
using EntityLINQ;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace app3.Migrations
{
    [DbContext(typeof(LearningModelContainer))]
    partial class LearningModelContainerModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EntityLINQ.StudentGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StudentGroupSet");
                });

            modelBuilder.Entity("EntityLINQ.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SubjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubjectTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubjectTypeId");

                    b.ToTable("SubjectSet");
                });

            modelBuilder.Entity("EntityLINQ.SubjectType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ParentSubjectTypeId")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentSubjectTypeId");

                    b.ToTable("SubjectTypeSet");
                });

            modelBuilder.Entity("StudentGroupSubject", b =>
                {
                    b.Property<int>("StudentGroupsId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectsId")
                        .HasColumnType("int");

                    b.HasKey("StudentGroupsId", "SubjectsId");

                    b.HasIndex("SubjectsId");

                    b.ToTable("StudentGroupSubject");
                });

            modelBuilder.Entity("EntityLINQ.Subject", b =>
                {
                    b.HasOne("EntityLINQ.SubjectType", "SubjectType")
                        .WithMany()
                        .HasForeignKey("SubjectTypeId");

                    b.Navigation("SubjectType");
                });

            modelBuilder.Entity("EntityLINQ.SubjectType", b =>
                {
                    b.HasOne("EntityLINQ.SubjectType", "ParentSubjectType")
                        .WithMany()
                        .HasForeignKey("ParentSubjectTypeId");

                    b.Navigation("ParentSubjectType");
                });

            modelBuilder.Entity("StudentGroupSubject", b =>
                {
                    b.HasOne("EntityLINQ.StudentGroup", null)
                        .WithMany()
                        .HasForeignKey("StudentGroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLINQ.Subject", null)
                        .WithMany()
                        .HasForeignKey("SubjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
